// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[11..13], a=aa, b=bb, c=cc, d=dd, e=ee, f=ff, g=gg, h=hh);
    RAM4K(in=in, load=aa, address=address[0..11], out=oa);
    RAM4K(in=in, load=bb, address=address[0..11], out=ob);
    RAM4K(in=in, load=cc, address=address[0..11], out=oc);
    RAM4K(in=in, load=dd, address=address[0..11], out=od);
    RAM4K(in=in, load=ee, address=address[0..11], out=oe);
    RAM4K(in=in, load=ff, address=address[0..11], out=of);
    RAM4K(in=in, load=gg, address=address[0..11], out=og);
    RAM4K(in=in, load=hh, address=address[0..11], out=oh);
    Mux8Way16(a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh, sel=address[11..13], out=out);
    // Put your code here:
}